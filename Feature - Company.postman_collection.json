{
	"info": {
		"_postman_id": "5f6c6ca3-1653-4827-ba76-7450523e1340",
		"name": "Feature - Company",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25008796"
	},
	"item": [
		{
			"name": "Login de Admin - Autenticação Copy",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.set(\"TokenProvider\", pm.response.json().token)\r",
									"pm.environment.set(\"TokenProvider\", pm.response.json().token)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{TokenProvider}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mail\": \"{{MailLoginAuth}}\",\r\n  \"password\": \"{{PasswordLoginAuth}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Url}}/login/",
							"host": [
								"{{Url}}"
							],
							"path": [
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "a. Criar usuário teste",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function geraDigito(cnpj, multiplicadores) {\r",
									"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
									"    const resto = soma % 11;\r",
									"    return resto < 2 ? 0 : 11 - resto;\r",
									"}\r",
									"\r",
									"function geraCNPJ() {\r",
									"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
									"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
									"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
									"    return cnpj.join('');\r",
									"}\r",
									"\r",
									"pm.environment.set(\"cnpj\", geraCNPJ());\r",
									"\r",
									"function geraCorporateName() {\r",
									"    const prefixos = [\r",
									"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
									"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
									"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
									"    ];\r",
									"    const sufixos = [\r",
									"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
									"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
									"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
									"    ];\r",
									"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
									"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
									"    return `${prefixo} ${sufixo}`;\r",
									"}\r",
									"\r",
									"pm.environment.set(\"corporateName\", geraCorporateName());\r",
									"\r",
									"function geraNomeFantasia() {\r",
									"    const prefixos = [\r",
									"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
									"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
									"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
									"    ];\r",
									"    const sufixos = [\r",
									"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
									"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
									"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
									"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
									"    ];\r",
									"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
									"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
									"    return `${prefixo} ${sufixo}`;\r",
									"}\r",
									"\r",
									"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"pm.environment.set(\"empresaTeste\", response.newCompany._id);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{TokenProvider}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{cnpj}}\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Url}}company",
							"host": [
								"{{Url}}company"
							]
						}
					},
					"response": []
				}
			],
			"description": "Para acessar a API é necessário realizar o login como administrador para autenticação obrigatória."
		},
		{
			"name": "3_Editar cadastro de empresas",
			"item": [
				{
					"name": "CN1: Validar edição de todos os campos com dados válidos",
					"item": [
						{
							"name": "CT3.1.1 - Todos os Campos de Forma Válida",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 200 - Created\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{cnpj}}\",\r\n  \"mail\": \"testando@test.com\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"Maria Clara\",\r\n  \"telephone\": \"5571988885981\",\r\n  \"serviceDescription\": \"Testes de software\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CN2: Validação edição com todos os campos vazios.",
					"item": [
						{
							"name": "CT3.2.1 - Todos os Campos Vazios",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"const response = pm.response.json();\r",
											"\r",
											"const errosEsperados = [\r",
											"    \"O campo 'Nome da empresa' é obrigatório.\",\r",
											"    \"O campo 'Email' é obrigatório.\",\r",
											"    \"O campo 'CNPJ' da empresa é obrigatório.\",\r",
											"    \"O campo 'Razão Social' da empresa é obrigatório.\",\r",
											"    \"O campo 'Contado do Responsável' é obrigatório.\",\r",
											"    \"O campo 'Telefone' é obrigatório.\",\r",
											"    \"O campo 'Descrição' é obrigatório.\"\r",
											"];\r",
											"\r",
											"errosEsperados.forEach(erro => {\r",
											"    pm.test(`Erro: \"${erro}\" está presente no response`, function () {\r",
											"        pm.expect(response.error).to.include(erro);\r",
											"    });\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"\",\r\n  \"registerCompany\": \"\",\r\n  \"mail\": \"\",\r\n  \"matriz\": \"\",\r\n  \"responsibleContact\": \"\",\r\n  \"telephone\": \"\",\r\n  \"serviceDescription\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CN3: Validação edição com restrição de campos duplicados.",
					"item": [
						{
							"name": "CT3.3.1 - 'Nome da Empresa' Utilizando Nome Já Cadastrado",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"Teste Company Blacklist 572884\",\r\n  \"registerCompany\": \"63754768000170\",\r\n  \"mail\": \"testando@test.com\",\r\n  \"matriz\": \"Cloud Prime\",\r\n  \"responsibleContact\": \"Maria Clara\",\r\n  \"telephone\": \"5571988885981\",\r\n  \"serviceDescription\": \"Testes de software\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT3.3.2 - 'CNPJ' Utilizando CNPJ Já Cadastrado",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"83239359000143\",\r\n  \"mail\": \"testando@test.com\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"Maria Clara\",\r\n  \"telephone\": \"5571988885981\",\r\n  \"serviceDescription\": \"Testes de software\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT3.3.3 - 'Razão Social' Utilizando Razão Social Já Cadastrada",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{cnpj}}\",\r\n  \"mail\": \"testando@test.com\",\r\n  \"matriz\": \"Organização Beta Ltda\",\r\n  \"responsibleContact\": \"Maria Clara\",\r\n  \"telephone\": \"5571988885981\",\r\n  \"serviceDescription\": \"Testes de software\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CN4: Validação edição com restrição de límite de caracteres.",
					"item": [
						{
							"name": "CT3.4.1 - 'Nome da Empresa' Utilizando Mais de 100 Caracteres",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"Maria Alessandra Gonçalves da Silva Pereira dos Santos Oliveira Albuquerque de Souza Ferreira Costa Lima Dias\",\r\n  \"registerCompany\": \"{{cnpj}}\",\r\n  \"mail\": \"testando@test.com\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"Maria Clara\",\r\n  \"telephone\": \"5571988885981\",\r\n  \"serviceDescription\": \"Testes de software\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT3.4.2 - 'Contato responsável' Utilizando Mais de 100 Caracteres",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{cnpj}}\",\r\n  \"mail\": \"testando@test.com\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"Maria Alessandra Gonçalves da Silva Pereira dos Santos Oliveira Albuquerque de Souza Ferreira Costa Lima Dias\",\r\n  \"telephone\": \"5571988885981\",\r\n  \"serviceDescription\": \"Testes de software\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CN5: Validação edição restrição com máscara.",
					"item": [
						{
							"name": "CT3.5.1 - 'CNPJ' com mais de 14 números Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"043534400001838\",\r\n  \"mail\": \"testando@test.com\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"Maria Clara\",\r\n  \"telephone\": \"5571988885981\",\r\n  \"serviceDescription\": \"Testes de software\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT3.5.2 - 'CNPJ' com menos de 14 números",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"0435344000018\",\r\n  \"mail\": \"testando@test.com\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"Maria Clara\",\r\n  \"telephone\": \"5571988885981\",\r\n  \"serviceDescription\": \"Testes de software\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT3.5.3 - 'Telefone' menos de 13 números",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{cnpj}}\",\r\n  \"mail\": \"testando@test.com\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"Maria Clara\",\r\n  \"telephone\": \"55119123456\",\r\n  \"serviceDescription\": \"Testes de software\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT3.5.4 - 'Telefone' mais de 14 números",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{cnpj}}\",\r\n  \"mail\": \"testando@test.com\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"Maria Clara\",\r\n  \"telephone\": \"551191234567855\",\r\n  \"serviceDescription\": \"Testes de software\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT3.5.5 - 'E-mail' fora do formato",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{cnpj}}\",\r\n  \"mail\": \"testandotest.com\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"Maria Clara\",\r\n  \"telephone\": \"5571988885981\",\r\n  \"serviceDescription\": \"Testes de software\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CN6: Validação edição restrição de caracteres",
					"item": [
						{
							"name": "CT3.6.1 - 'Nome da Empresa' incluindo caracteres especiais",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"Silv&ir@ El.tro,i%cos\",\r\n  \"registerCompany\": \"{{cnpj}}\",\r\n  \"mail\": \"testando@test.com\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"Maria Clara\",\r\n  \"telephone\": \"5571988885981\",\r\n  \"serviceDescription\": \"Testes de software\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT3.6.2 - 'CNPJ' incluindo letras",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"12H45G7800F195\",\r\n  \"mail\": \"testando@test.com\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"Maria Clara\",\r\n  \"telephone\": \"5571988885981\",\r\n  \"serviceDescription\": \"Testes de software\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT3.6.3 - 'CNPJ' incluindo caracteres especiais",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"1$345&7800%195\",\r\n  \"mail\": \"testando@test.com\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"Maria Clara\",\r\n  \"telephone\": \"5571988885981\",\r\n  \"serviceDescription\": \"Testes de software\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT3.6.4 - 'Razão Social' incluindo caracteres especiais",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{cnpj}}\",\r\n  \"mail\": \"testando@test.com\",\r\n  \"matriz\": \"S*lve!r$ inf#rm@tica Co\",\r\n  \"responsibleContact\": \"Maria Clara\",\r\n  \"telephone\": \"5571988885981\",\r\n  \"serviceDescription\": \"Testes de software\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT3.6.5 - 'Contato Responsável' incluindo caracteres especiais",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{cnpj}}\",\r\n  \"mail\": \"testando@test.com\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"@nt*n&o C&@#!\",\r\n  \"telephone\": \"5571988885981\",\r\n  \"serviceDescription\": \"Testes de software\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT3.6.6 - 'Contato Responsável' incluindo números",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{cnpj}}\",\r\n  \"mail\": \"testando@test.com\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"4nt0n10 C4rl9s\",\r\n  \"telephone\": \"5571988885981\",\r\n  \"serviceDescription\": \"Testes de software\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT3.6.7 - 'Contato Responsável' com uma palavra",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{cnpj}}\",\r\n  \"mail\": \"testando@test.com\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"Antonio\",\r\n  \"telephone\": \"5571988885981\",\r\n  \"serviceDescription\": \"Testes de software\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT3.6.8 - 'Telefone' sem DDD do Brasil",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{cnpj}}\",\r\n  \"mail\": \"testando@test.com\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"Maria Clara\",\r\n  \"telephone\": \"5111912345678\",\r\n  \"serviceDescription\": \"Testes de software\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT3.6.9 - 'Telefone' incluindo letras",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{cnpj}}\",\r\n  \"mail\": \"testando@test.com\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"Maria Clara\",\r\n  \"telephone\": \"557198b56a178\",\r\n  \"serviceDescription\": \"Testes de software\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT3.6.10 - 'Telefone' incluindo caracteres especiais",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{cnpj}}\",\r\n  \"mail\": \"testando@test.com\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"Maria Clara\",\r\n  \"telephone\": \"557198&56*178\",\r\n  \"serviceDescription\": \"Testes de software\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT3.6.11 - 'Descrição' incluindo caracteres especiais",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{cnpj}}\",\r\n  \"mail\": \"testando@test.com\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"Maria Clara\",\r\n  \"telephone\": \"5571988885981\",\r\n  \"serviceDescription\": \"*&%@#\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "4_Editar dados de endereço da empresa",
			"item": [
				{
					"name": "CN1: Validar edição do endereço de empresa com sucesso.",
					"item": [
						{
							"name": "CT4.1.1 - Todos os Campos de Forma Válida",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 200 - OK\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"const expectedMsg = \"Endereço da companhia atualizado com sucesso.\";\r",
											"\r",
											"pm.test(\"A mensagem está correta.\", () => {\r",
											"    pm.expect(pm.response.json().msg).to.eql(expectedMsg);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777004\",\r\n      \"city\": \"Brasilia\",\r\n      \"state\": \"DF\",\r\n      \"district\": \"Rua x\",\r\n      \"street\": \"Avenida y\",\r\n      \"number\": \"10\",\r\n      \"complement\": \"xpto\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/address/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"address",
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CN2: Validar campos obrigatórios",
					"item": [
						{
							"name": "CT4.2.1 - Todos os Campos Vazios",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"const expectedResponse = {\r",
											"    \"error\": [\r",
											"        \"O campo 'CEP' é obrigatório.\",\r",
											"        \"O campo País é obrigatório.\",\r",
											"        \"O campo 'cidade' é obrigatório.\",\r",
											"        \"O campo 'estado' é obrigatório.\",\r",
											"        \"O campo 'bairro' é obrigatório.\",\r",
											"        \"O campo 'logradouro' é obrigatório.\",\r",
											"        \"O campo 'número' é obrigatório.\"\r",
											"    ]\r",
											"};\r",
											"\r",
											"pm.test(\"A resposta está correta.\", () => {\r",
											"    pm.expect(pm.response.json()).to.eql(expectedResponse);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"\",\r\n      \"city\": \"\",\r\n      \"state\": \"\",\r\n      \"district\": \"\",\r\n      \"street\": \"\",\r\n      \"number\": \"\",\r\n      \"complement\": \"\",\r\n      \"country\": \"\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/address/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"address",
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CN3: Validar limite de caracteres",
					"item": [
						{
							"name": "CT4.3.1 - 'Logradouro' Utilizando Mais de 50 Caracteres",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777004\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Sé\",\r\n      \"street\": \"ucomrqapmaoyrgjopydmqdsyhuumuaoahsqbbyryeobzqgqaqkoxuhsqcmqx\",\r\n      \"number\": \"10\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/address/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"address",
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT4.3.2 - 'Número' Utilizando Mais de 10 Caracteres",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777004\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Sé\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50505050500\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/address/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"address",
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT4.3.3 - 'Complemento' Utilizando Mais de 80 Caracteres",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777004\",\r\n      \"city\": \"Brasilia\",\r\n      \"state\": \"DF\",\r\n      \"district\": \"Rua x\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"10\",\r\n      \"complement\": \"Apto 304 - Bloco B - Edifício Nova Esperança - Rua das Flores - próximo ao mercado central\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/address/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"address",
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT4.3.4 - 'Bairro' Utilizando Mais de 50 Caracteres",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777004\",\r\n      \"city\": \"Brasilia\",\r\n      \"state\": \"DF\",\r\n      \"district\": \"ucomrqapmaoyrgjopydmqdsyhuumuaoahsqbbyryeobzqgqaqkoxuhsqcmqx\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"10\",\r\n      \"complement\": \"Apto 304 - Bloco B\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/address/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"address",
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT4.3.5 - 'Cidade' Utilizando Mais de 50 Caracteres",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777004\",\r\n      \"city\": \"Parque Residencial Jardim das Palmeiras do Sul\",\r\n      \"state\": \"DF\",\r\n      \"district\": \"Sé\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"10\",\r\n      \"complement\": \"Apto 304 - Bloco B\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/address/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"address",
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT4.3.6 - 'Estado' Utilizando Mais de 2 Caracteres",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777004\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SPSP\",\r\n      \"district\": \"Sé\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"10\",\r\n      \"complement\": \"Apto 304 - Bloco B\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/address/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"address",
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT4.3.7 - 'País' Utilizando Mais de 50 Caracteres",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777004\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Sé\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"10\",\r\n      \"complement\": \"Apto 304 - Bloco B\",\r\n      \"country\": \"República Federativa das Ilhas Unidas do Oceano Pacífico\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/address/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"address",
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CN4: Validar restrição de máscara",
					"item": [
						{
							"name": "CT4.4.1 - 'CEP' fora da máscara",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"047770019\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Sé\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"10\",\r\n      \"complement\": \"Apto 304 - Bloco B\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/address/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"address",
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CN5: Validar restrição de formato",
					"item": [
						{
							"name": "CT4.5.1 - 'Logradouro' Incluindo Caracteres Especiais Não Permitidos",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777089\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Sé\",\r\n      \"street\": \"Av,en!da Interl@gos\",\r\n      \"number\": \"10\",\r\n      \"complement\": \"Apto 304 - Bloco B\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/address/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"address",
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT4.5.2 - 'Número' Incluindo Caracteres Especiais",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777089\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Sé\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"5&0\",\r\n      \"complement\": \"Apto 304 - Bloco B\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/address/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"address",
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT4.5.3 - 'Número' Incluindo Letras",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777089\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Sé\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"5A\",\r\n      \"complement\": \"Apto 304 - Bloco B\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/address/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"address",
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT4.5.4 - 'Complemento' Incluindo Caracteres Especiais Não Permitidos",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777089\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Sé\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"5\",\r\n      \"complement\": \"Apto% 304&, Bloco B*.\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/address/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"address",
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT4.5.5 - 'Bairro' Incluindo Caracteres Especiais Não Permitidos",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777089\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Sé!*&\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"5\",\r\n      \"complement\": \"Apto 304 - Bloco B\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/address/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"address",
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT4.5.6 - 'Cidade' Incluindo Caracteres Especiais Não Permitidos",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777089\",\r\n      \"city\": \"São P@ul%\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Sé\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"5\",\r\n      \"complement\": \"Apto 304 - Bloco B\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/address/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"address",
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT4.5.7 - 'Cidade' Incluindo Números",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777089\",\r\n      \"city\": \"São00 P456ulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Sé\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"5\",\r\n      \"complement\": \"Apto 304 - Bloco B\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/address/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"address",
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT4.5.8 - 'Estado' Incluindo Caracteres Especiais",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777089\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"S&\",\r\n      \"district\": \"Sé\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"5\",\r\n      \"complement\": \"Apto 304 - Bloco B\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/address/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"address",
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT4.5.9 - 'Estado' Incluindo Números",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777089\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"S7\",\r\n      \"district\": \"Sé\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"5\",\r\n      \"complement\": \"Apto 304 - Bloco B\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/address/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"address",
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT4.5.10 - 'País' Incluindo Caracteres Especiais",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777089\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Sé\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"5\",\r\n      \"complement\": \"Apto 304 - Bloco B\",\r\n      \"country\": \"Brasil%&\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/address/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"address",
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT4.5.11 - 'País' incluindo números",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777089\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Sé\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"5\",\r\n      \"complement\": \"Apto 304 - Bloco B\",\r\n      \"country\": \"Bras09l\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/address/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"address",
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT4.5.12 - 'CEP' incluindo caracteres especiais",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"0477°089\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Sé\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"5\",\r\n      \"complement\": \"Apto 304 - Bloco B\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/address/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"address",
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT4.5.13 - 'CEP' incluindo letras",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad Request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"0477A089\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Sé\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"5\",\r\n      \"complement\": \"Apto 304 - Bloco B\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/address/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"address",
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "5_Consultar empresa por ID",
			"item": [
				{
					"name": "CN1: Validar busca por ID válido no sistema.",
					"item": [
						{
							"name": "CT5.1.1 - Buscar por um ID cadastrado no sistema",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 200 - OK\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"const response = pm.response.json();\r",
											"\r",
											"pm.test(\"Response contém _id\", function() {\r",
											"    pm.expect(response).to.have.property(\"_id\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response contém corporateName\", function() {\r",
											"    pm.expect(response).to.have.property(\"corporateName\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response contém registerCompany\", function() {\r",
											"    pm.expect(response).to.have.property(\"registerCompany\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response contém responsibleContact\", function() {\r",
											"    pm.expect(response).to.have.property(\"responsibleContact\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response contém mail\", function() {\r",
											"    pm.expect(response).to.have.property(\"mail\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response contém telephone\", function() {\r",
											"    pm.expect(response).to.have.property(\"telephone\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response contém serviceDescription\", function() {\r",
											"    pm.expect(response).to.have.property(\"serviceDescription\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response contém matriz\", function() {\r",
											"    pm.expect(response).to.have.property(\"matriz\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response contém status\", function() {\r",
											"    pm.expect(response).to.have.property(\"status\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response contém address\", function() {\r",
											"    pm.expect(response).to.have.property(\"address\");\r",
											"    pm.expect(response.address[0]).to.have.property(\"_id\");\r",
											"    pm.expect(response.address[0]).to.have.property(\"country\");\r",
											"    pm.expect(response.address[0]).to.have.property(\"zipCode\");\r",
											"    pm.expect(response.address[0]).to.have.property(\"city\");\r",
											"    pm.expect(response.address[0]).to.have.property(\"state\");\r",
											"    pm.expect(response.address[0]).to.have.property(\"district\");\r",
											"    pm.expect(response.address[0]).to.have.property(\"street\");\r",
											"    pm.expect(response.address[0]).to.have.property(\"number\");\r",
											"    pm.expect(response.address[0]).to.have.property(\"complement\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CN2: Buscar por um ID não existente no sistema",
					"item": [
						{
							"name": "CT5.2.1 - Buscar por um ID não existente no sistema",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400 - Bad request\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"const response = pm.response.json();\r",
											"\r",
											"pm.test(\"Mensagem de erro está presente\", function() {\r",
											"    pm.expect(response.alert).to.include(\"Essa companhia não existe em nosso sistema.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/6730b956bcd3e979d0d2ff25",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"6730b956bcd3e979d0d2ff25"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT5.2.2 - Buscar por um ID vazio ou nulo",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 500\", function () {\r",
											"  pm.response.to.have.status(500);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/null",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"null"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "6_Atualizar o status da empresa",
			"item": [
				{
					"name": "CN1: Validar atualização do status da empresa de ativo para inativo.",
					"item": [
						{
							"name": "CT6.1.1 - Alterar o status da empresa para inativo",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 200 - OK\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"const response = pm.response.json();\r",
											"\r",
											"pm.test(\"Mensagem de sucesso está presente\", function() {\r",
											"    pm.expect(response).to.have.property(\"msg\", \"Status da companhia atualizado com sucesso.\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status da companhia está inativa\", function() {\r",
											"    pm.expect(response.updateCompany.status).to.eql(false);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/status/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"status",
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CN2: Validar atualização do status da empresa de inativo para ativo.",
					"item": [
						{
							"name": "CT6.2.1 - Alterar o status da empresa para ativo",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 200 - OK\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"const response = pm.response.json();\r",
											"\r",
											"pm.test(\"Mensagem de sucesso está presente\", function() {\r",
											"    pm.expect(response).to.have.property(\"msg\", \"Status da companhia atualizado com sucesso.\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status da companhia está ativo\", function() {\r",
											"    pm.expect(response.updateCompany.status).to.eql(true);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/status/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"status",
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CN3: Atualização do status não aconteceu.",
					"item": [
						{
							"name": "CT6.3.1 - Alterar o status de uma empresa com ID inexistente",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"const response = pm.response.json();\r",
											"\r",
											"pm.test(\"Mensagem de informativa está presente\", function() {\r",
											"    pm.expect(response).to.have.property(\"msg\", \"Essa companhia não existem em nossa base de dados.\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/status/6730b956bcd3e979d0d2ff25",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"status",
										"6730b956bcd3e979d0d2ff25"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "7_Excluir cadastro de empresa",
			"item": [
				{
					"name": "CN1: Validar exclusão de cadastro de empresa com sucesso.",
					"item": [
						{
							"name": "CT7.1.1 - Excluir cadastro de empresa com sucesso",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 200 - OK\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"const response = pm.response.json();\r",
											"\r",
											"pm.test(\"Mensagem de sucesso está presente\", function() {\r",
											"    pm.expect(response).to.have.property(\"msg\", \"Companhia deletado com sucesso.\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CN2: Validar exclusão de cadastro de empresa não realizada.",
					"item": [
						{
							"name": "CT7.2.1 - Excluir cadastro de empresa inexistente",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function geraDigito(cnpj, multiplicadores) {\r",
											"    const soma = cnpj.map((num, i) => num * multiplicadores[i]).reduce((acc, curr) => acc + curr, 0);\r",
											"    const resto = soma % 11;\r",
											"    return resto < 2 ? 0 : 11 - resto;\r",
											"}\r",
											"\r",
											"function geraCNPJ() {\r",
											"    const cnpj = Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).concat([0, 0, 0, 1]);\r",
											"    cnpj.push(geraDigito(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    cnpj.push(geraDigito(cnpj, [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]));\r",
											"    return cnpj.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cnpj\", geraCNPJ());\r",
											"\r",
											"function geraCorporateName() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Solutions\", \"Global\", \"Digital\", \"Net\", \"Smart\", \"Prime\", \"Systems\", \r",
											"        \"Cloud\", \"Blue\", \"Quantum\", \"Green\", \"NextGen\", \"Aero\", \"Insight\", \"Vision\", \"Alpha\", \r",
											"        \"Omni\", \"Pioneer\", \"Core\", \"Elite\", \"Synergy\", \"Dynamic\", \"Future\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Corp\", \"Group\", \"Consulting\", \"LLC\", \"S.A.\", \"Services\", \"Partners\", \"Enterprises\", \r",
											"        \"Innovations\", \"Holdings\", \"Technologies\", \"Solutions\", \"Industries\", \"Associates\", \r",
											"        \"Ventures\", \"Global\", \"Dynamics\", \"Networks\", \"Consultants\", \"Advisors\", \"Resources\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"corporateName\", geraCorporateName());\r",
											"\r",
											"function geraNomeFantasia() {\r",
											"    const prefixos = [\r",
											"        \"Tech\", \"Info\", \"Cyber\", \"Smart\", \"Data\", \"Cloud\", \"Next\", \"Neo\", \"Digital\", \r",
											"        \"Prime\", \"Virtual\", \"Logic\", \"Connect\", \"Inova\", \"Quantum\", \"Byte\", \"Alpha\", \r",
											"        \"Hyper\", \"Net\", \"Future\", \"Sync\", \"Nano\", \"Matrix\", \"Core\", \"Blue\", \"Meta\"\r",
											"    ];\r",
											"    const sufixos = [\r",
											"        \"Solutions\", \"Hub\", \"Labs\", \"Systems\", \"Network\", \"Works\", \"Dynamics\", \"Tech\", \r",
											"        \"Global\", \"Innovations\", \"Consulting\", \"Digital\", \"Analytics\", \"Ware\", \r",
											"        \"Solutions\", \"IT\", \"Zone\", \"Digital\", \"Services\", \"Prime\", \"Smart\", \r",
											"        \"Inova\", \"Center\", \"Edge\", \"Cloud\", \"Fusion\", \"Vision\"\r",
											"    ];\r",
											"    const prefixo = prefixos[Math.floor(Math.random() * prefixos.length)];\r",
											"    const sufixo = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"    return `${prefixo} ${sufixo}`;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"matriz\", geraNomeFantasia());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 404 - Not found\", function () {\r",
											"  pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"const response = pm.response.json();\r",
											"\r",
											"pm.test(\"Mensagem informativa está presente\", function() {\r",
											"    pm.expect(response).to.have.property(\"msg\", \"Essa companhia não existem em nossa base de dados.\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenProvider}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}company/{{empresaTeste}}",
									"host": [
										"{{Url}}company"
									],
									"path": [
										"{{empresaTeste}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}